# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @upper on FIELD_DEFINITION

type User {
  id: ID!
  name: String!
  email: String!
  password: String!
  role: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  answers: [Answer!]!
  surveys: [Survey!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Answer {
  id: ID!
  user: User!
  survey: Survey!
  question: Question!
  selectedOption: Option!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Option {
  id: ID!
  text: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  question: [Question!]!
  answers: [Answer!]
}

type Question {
  id: ID!
  text: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  survey: [Survey!]!
  options: [Option!]!
  answers: [Answer!]!
}

type Survey {
  id: ID!
  title: String!
  description: String
  isPublic: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  questions: [Question!]!
  user: [User!]!
  answers: [Answer!]!
}

type OptionStats {
  id: ID!
  text: String!
  responseCount: Float!
}

type QuestionStats {
  id: ID!
  text: String!
  options: [OptionStats!]!
}

type SurveyStats {
  totalResponses: Float!
  questions: [QuestionStats!]!
}

type LoginResponse {
  accessToken: String!
}

type Query {
  getAllSurveys: [Survey!]!
  getSurvey(id: ID!): Survey!
  getMySurveys: [Survey!]!
  getPublicSurveys: [Survey!]!
  getPrivateSurveys: [Survey!]!
  getSurveyStats(surveyId: ID!): SurveyStats!
  user: User!
}

type Mutation {
  toggleSurveyVisibility(id: ID!, isPublic: Boolean!): Survey!
  createSurvey(title: String!, description: String, questions: [CreateQuestionInput!]!): Survey!
  submitAnswers(answers: [AnswerInput!]!): [Answer!]!
  registerUser(name: String!, email: String!, password: String!): User!
  login(email: String!, password: String!): LoginResponse!
  logout: Boolean!
}

input CreateQuestionInput {
  text: String!
  options: [CreateOptionInput!]!
}

input CreateOptionInput {
  text: String!
}

input AnswerInput {
  surveyId: ID!
  questionId: ID!
  selectedOptionIds: ID!
  userId: ID!
}